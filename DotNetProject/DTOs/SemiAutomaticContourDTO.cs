using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace DTOs
{
    /// <summary>
    /// Class for lines in contour. Points must exists, pixels exists in situation when it is generated by semi-automatic
    /// Pixels must to be continuity.
    /// </summary>
    public class LinePointsAndPixels
    {
        public List<Point> points;
        public List<Point> pixels;
        public string brushColor;
    }

    /// <summary>
    /// Class for result of calculations of Semi-Automatic
    /// In list of LinePointsAndPixels must exist at least 1 line
    /// Central Points cannot be null and must exsits at least 1 point inside this list
    /// </summary>
    public class SemiAutomaticContourDTO
    {
        public Guid guid { get; set; }
        public string dicomid { get; set; }

        /// <summary>
        /// Tag or name - user can put here anything, for example name of bone or neoplastic changes names
        /// </summary>
        /// <value></value>
        public string tag { get; set; }
        public List<LinePointsAndPixels> lines { get; set; }

        /// <summary>
        /// Canvas width, currently isn't used, because mapping is in frontex
        /// </summary>
        /// <value></value>
        public int width { get; set; }

        /// <summary>
        /// Canvas height, currently isn't used, because mapping is in frontex
        /// </summary>
        /// <value></value>
        public int height { get; set; }
        public StatisticsResult statistics { get; set; }
        public List<Point> centralPoints { get; set; }

        public SemiAutomaticContourDTO()
        {
            guid = Guid.NewGuid();
        }

        /// <summary>
        /// Constructor for result of semi-automatic calculations, contour.
        /// Good for editing exisiting contour
        /// </summary>
        /// <param name="_guid"> Guid in situation, when this one contour exists and we want to edit </param>
        /// <param name="_DICOMid"> DICOMId,to which one this contour is referenced </param>
        /// <param name="_tag"> User text, for example "Bone" or "Neoplastic changes" </param>
        /// <param name="_lines"> List of lines, must exists at least one line </param>
        /// <param name="_width"> Canvas width, currently not used </param>
        /// <param name="_height"> Canvas height, currently not used </param>
        /// <param name="_statistics"> Statistics of contour, counting after creating the contour by semi-automatic </param>
        /// <param name="_centralPoints"> List of central points, must exists at least one Point </param>
        public SemiAutomaticContourDTO(Guid _guid, string _DICOMid, string _tag, List<LinePointsAndPixels> _lines, int _width, int _height,
            StatisticsResult _statistics, List<Point> _centralPoints)
        {
            guid = _guid;
            dicomid = _DICOMid;
            tag = _tag;
            lines = new List<LinePointsAndPixels>(_lines);
            width = _width;
            height = _height;
            statistics = _statistics;
            if (_centralPoints != null)
            {
                centralPoints = new List<Point>(_centralPoints);
            }
        }

        /// <summary>
        /// Constructor for result of semi-automatic calculations, contour.
        /// Good for creating new contour
        /// </summary>
        /// <param name="_DICOMid"> DICOMId,to which one this contour is referenced </param>
        /// <param name="_tag"> User text, for example "Bone" or "Neoplastic changes" </param>
        /// <param name="_lines"> List of lines, must exists at least one line </param>
        /// <param name="_width"> Canvas width, currently not used </param>
        /// <param name="_height"> Canvas height, currently not used </param>
        /// <param name="_statistics"> Statistics of contour, counting after creating the contour by semi-automatic </param>
        /// <param name="_centralPoints"> List of central points, must exists at least one Point </param>
        public SemiAutomaticContourDTO(string _DICOMid, string _tag, List<LinePointsAndPixels> _lines, int _width, int _height,
            StatisticsResult _statistics, List<Point> _centralPoints)
        {
            guid = Guid.NewGuid();
            dicomid = _DICOMid;
            tag = _tag;
            lines = new List<LinePointsAndPixels>(_lines);
            width = _width;
            height = _height;
            statistics = _statistics;
            if (_centralPoints != null)
            {
                centralPoints = new List<Point>(_centralPoints);
            }
        }
    }
}